# Generated by Django 5.1.3 on 2024-12-06 19:07

from django.db import migrations
from django.utils.text import slugify
from unidecode import unidecode


def generate_categories(apps, schema_editor):

    Category = apps.get_model('consultation', 'Category')
    categories = [
        {"title": "Общи здравни въпроси",
         "description": "Въпроси и съвети за поддържане на общото здравословно състояние."},
        {"title": "Лекарства и дозировки",
         "description": "Въпроси, свързани с правилната употреба на лекарства и препоръчителните дози."},
        {"title": "Хронични заболявания",
         "description": "Въпроси за управление и лечение на хронични състояния като диабет, хипертония и др."},
        {"title": "Хранителни добавки",
         "description": "Консултации за избор и употреба на хранителни добавки и витамини."},
        {"title": "Бременност и кърмене",
         "description": "Въпроси относно безопасността на лекарствата и съвети по време на бременност и кърмене."},
        {"title": "Детско здраве", "description": "Консултации, свързани със здравето и развитието на децата."},
        {"title": "Кожни проблеми", "description": "Въпроси за дерматологични проблеми и препоръчани продукти."},
        {"title": "Инфекции и антибиотици",
         "description": "Консултации за лечение на инфекции и употреба на антибиотици."},
        {"title": "Алергии и имунитет",
         "description": "Въпроси относно алергии, имунни реакции и препоръки за подобряване на имунитета."},
        {"title": "Психично здраве",
         "description": "Консултации относно стрес, тревожност, депресия и свързаните с тях терапии."},
        {"title": "Алтернативна медицина",
         "description": "Въпроси относно хомеопатия, билкови лекарства и други алтернативни подходи."},
        {"title": "Очно здраве", "description": "Консултации относно очни заболявания и правилна грижа за очите."},
        {"title": "Устна хигиена", "description": "Въпроси за правилната грижа за зъбите и венците."},
    ]

    for category_data in categories:
        category = Category(title=category_data["title"], description=category_data["description"])
        category.save()


        if not category.slug:
            category.slug = slugify(f'{unidecode(category.title)}-{category.id}')
            category.save()

class Migration(migrations.Migration):

    dependencies = [
        ('consultation', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(generate_categories),
    ]
